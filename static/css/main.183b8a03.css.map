{"version":3,"file":"static/css/main.183b8a03.css","mappings":"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","sources":["components/loading.scss","containers/page.scss","lib/styles/animations.scss","containers/pages/mainPage/mainPage.scss","lib/styles/includeMedia.scss","containers/pages/aboutMe/aboutMe.scss","containers/pages/education/education.scss","containers/_basePage.scss","containers/pages/workHistory/workHistory.scss","containers/App.scss","index.scss"],"sourcesContent":[".Loading {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n}\r\n.Loading div {\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 8px;\r\n    width: 16px;\r\n    background: #fff;\r\n    animation: Loading 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\r\n\r\n    &:nth-child(1) {\r\n        left: 8px;\r\n        animation-delay: -0.24s;\r\n    }\r\n\r\n    &:nth-child(2) {\r\n        left: 32px;\r\n        animation-delay: -0.12s;\r\n    }\r\n\r\n    &:nth-child(3) {\r\n        left: 56px;\r\n        animation-delay: 0;\r\n    }\r\n}\r\n\r\n@keyframes Loading {\r\n    0% {\r\n        top: 8px;\r\n        height: 64px;\r\n    }\r\n    50%, 100% {\r\n        top: 24px;\r\n        height: 32px;\r\n    }\r\n}\r\n","@use 'src/containers/basePage';\r\n\r\n$gradient-left: #36D1DC;\r\n$gradient-mid: #86A8E7;\r\n$gradient-right: #5B86E5;\r\n\r\n.Page {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    box-sizing: border-box;\r\n\r\n    position: relative;\r\n\r\n    background: $gradient-left;  /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, $gradient-left,$gradient-right);  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, $gradient-left, $gradient-right); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n    .Loader {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n}\r\n\r\n","// sass mixin to account for different browser animations\r\n@mixin keyframes($name) {\r\n    @-webkit-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @-moz-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @-ms-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @keyframes #{$name} {\r\n        @content;\r\n    }\r\n} \r\n\r\n@mixin SlideHorizontal($start, $name) {\r\n\r\n    @include keyframes($name) {\r\n        0% {\r\n            transform: translateX($start);\r\n        }\r\n        100% {\r\n            transform: translateX(0%);\r\n        }\r\n    }\r\n}\r\n\r\n@mixin SlideVertical($start, $name) {\r\n\r\n    @include keyframes($name) {\r\n        0% {\r\n            transform: translateY($start);\r\n        }\r\n        100% {\r\n            transform: translateY(0%);\r\n        }\r\n    }\r\n}\r\n\r\n@mixin Scale($start, $stop, $name) {\r\n    @include keyframes($name) {\r\n        0% {\r\n            transform: scale($start);\r\n        }\r\n        100% {\r\n            transform: scale($stop);\r\n        }\r\n    }\r\n}","@use '../../basePage';\r\n@use 'src/lib/styles/animations' as *;\r\n@use 'src/lib/styles/includeMedia' as *;\r\n@use 'src/lib/styles/clamp' as *;\r\n\r\n@include SlideHorizontal(300%, SlideLeft); // h1 welcome text animation\r\n@include SlideHorizontal(-300%, SlideRight); // p welcome text animation\r\n\r\n@include keyframes(ArrowBounce) {\r\n    0% {\r\n        transform: translateY(0%);\r\n    }\r\n    50% {\r\n        transform: translateY(10%);\r\n    }\r\n    100% {\r\n        transform: translateY(0%);\r\n    }\r\n}\r\n\r\n.MainPage {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: transparent;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n} // MainPage\r\n\r\n\r\n.MainPageContent {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center; // center horizontally\r\n    align-items: center; // center vertically\r\n\r\n    overflow: hidden;\r\n} \r\n\r\n// left side image\r\n.SelfImage {\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center; // center horizontally\r\n    align-items: center; // center vertically\r\n\r\n    animation: SlideRight 0.5s ease-out;\r\n\r\n    @include media('<desktop') {\r\n        display: none;\r\n    }\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 95%; // want to allow for some space between top and bottom\r\n\r\n        // replaced content is scaled to maintain its aspect ratio while fitting within the element's content box\r\n        // The entire object is made to fill the box, while preserving its aspect ratio\r\n        object-fit: contain;\r\n    }\r\n}\r\n\r\n// right side text\r\n.WelcomeText {\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center; // center horizontally\r\n    align-items: center; // center vertically\r\n\r\n    color: white;\r\n    font-family: 'Roboto';\r\n\r\n    overflow: hidden;\r\n\r\n    @include media('<desktop') {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        margin: 0.5%;\r\n    }\r\n\r\n    .WelcomeTop { // 'welcome to the personal site of'\r\n        width: 100%;\r\n        font-size: 3rem;\r\n        font-weight: 200;\r\n\r\n        text-align: left;\r\n\r\n        margin: 0;\r\n\r\n        animation: SlideRight 0.5s linear;\r\n\r\n        @include media('<desktop') {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    .WelcomeBottom { // 'ALEXANDER MARASCO'\r\n        width: 100%;\r\n\r\n        font-size: sass_clamp(300, 3, 2000, 3.5);\r\n        font-weight: 700;\r\n        text-transform: uppercase;\r\n\r\n        margin: 0;\r\n\r\n        animation: SlideLeft 0.5s linear;\r\n    }\r\n} ","////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n/// \r\n/// usage documentation: https://eduardoboucas.github.io/include-media/\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n    phone: 640px,\r\n    tablet: 748px,\r\n    desktop: 1024px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n    'screen': 'screen', // computer screens, tablets, smartphones\r\n    'print': 'print', // printers\r\n    'handheld': 'handheld', // non-smartphone, non-tablet handheld device\r\n\r\n    // static expression with logical disjunction (OR operator)\r\n    // e.g. (a), (b), (c) => a or b or c\r\n    'landscape': '(orientation: landscape)',\r\n    'portait': '(orientation: portrait)',\r\n    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n    'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n    'px': 1,\r\n    'em': 0.01,\r\n    'rem': 0.1,\r\n    '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n    @if feature-exists('at-error') {\r\n        @error $message;\r\n    } @else {\r\n        @warn $message;\r\n        $_: noop();\r\n    }\r\n\r\n    @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n    @if im-log($message) {}\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n    // get the $breakpoints value to use if media query not supported\r\n    $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n  \r\n    // log error if not a $breakpoints key\r\n    @if not $no-media-breakpoint-value {\r\n        @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n    }\r\n  \r\n    @each $condition in $conditions {\r\n        // if condition does not exist in $media-expressions, parse it\r\n        @if not map-has-key($media-expressions, $condition) {\r\n            // get the comparison operator of condition\r\n            $operator: get-expression-operator($condition);\r\n            // determine whether it is a max or min rule\r\n            $prefix: get-expression-prefix($operator);\r\n            // get the value for the media query based on the comparison operator\r\n            $value: get-expression-value($condition, $operator);\r\n\r\n            // check to see if value complies with max or min rule\r\n            // for the default breakpoint to use when media queries are not supported\r\n            @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n                ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n                @return false;\r\n            }\r\n        // check to see if condition is not an allowed expression for when media queries are not supported\r\n        } @else if not index($im-no-media-expressions, $condition) {\r\n            @return false;\r\n        }\r\n    }\r\n  \r\n    @return true;\r\n}\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n    // find the comparison operator that exists in the expression string\r\n    @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n        @if str-index($expression, $operator) {\r\n            @return $operator;\r\n        }\r\n    }\r\n\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n  \r\n  \r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n    // using the index of the operator in the expression,\r\n    // get the substring value from the beginning of $expression to right before $operator starts\r\n    $operator-index: str-index($expression, $operator);\r\n    $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n    // default dimension\r\n    $dimension: 'width';\r\n\r\n    // override default dimension if substring has a value\r\n    @if str-length($parsed-dimension) > 0 {\r\n        $dimension: $parsed-dimension;\r\n    }\r\n\r\n    @return $dimension;\r\n}\r\n  \r\n  \r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n    // if operator is <, <=, or ≤, then it's a max rule\r\n    // otherwise it's a min rule\r\n    @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n    // using the index and length of the operator, get the substring with the comparison value\r\n    $operator-index: str-index($expression, $operator);\r\n    $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n    // if the comparison value is a variable name in $breakpoints, get it's value\r\n    @if map-has-key($breakpoints, $value) {\r\n        $value: map-get($breakpoints, $value);\r\n    } @else {\r\n        // if comparison value is a number, convert the substring to a number\r\n        $value: to-number($value);\r\n    }\r\n\r\n    // get the value unit and it's interval to use for adjusting based on comparison operator's exclusivity\r\n    $interval: map-get($unit-intervals, unit($value));\r\n\r\n    @if not $interval {\r\n        // It is not possible to include a mixin inside a function, so we have to\r\n        // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n        // functions cannot be called anywhere in Sass, we need to hack the call in\r\n        // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n        // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n        $_: im-log('Unknown unit `#{unit($value)}`.');\r\n    }\r\n\r\n    // adjust value if operator is not inclusive\r\n    @if $operator == '>' {\r\n        $value: $value + $interval;\r\n    } @else if $operator == '<' {\r\n        $value: $value - $interval;\r\n    }\r\n\r\n    @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n    // If it is part of $media-expressions, it has no operator\r\n    // then there is no need to go any further, just return the value\r\n    @if map-has-key($media-expressions, $expression) {\r\n        @return map-get($media-expressions, $expression);\r\n    }\r\n\r\n    // get comparison operator\r\n    $operator: get-expression-operator($expression);\r\n    // get width or height dimension \r\n    $dimension: get-expression-dimension($expression, $operator);\r\n    // get min or max rule\r\n    $prefix: get-expression-prefix($operator);\r\n    // get comparison value\r\n    $value: get-expression-value($expression, $operator);\r\n\r\n    @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n  \r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n    // check for out-of-bounds errors\r\n    @if length($list) < 1 or $start > $end {\r\n        @return ();\r\n    }\r\n\r\n    $result: ();\r\n    // get values from $start index to $end index\r\n    @for $i from $start through $end {\r\n        $result: append($result, nth($list, $i));\r\n    }\r\n\r\n    @return $result;\r\n}\r\n  \r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n    @if type-of($value) == 'number' {\r\n        @return $value;\r\n    } @else if type-of($value) != 'string' {\r\n        $_: im-log('Value for `to-number` should be a number or a string.');\r\n    }\r\n\r\n    $first-character: str-slice($value, 1, 1);\r\n    $result: 0;\r\n    $digits: 0;\r\n    $minus: ($first-character == '-'); // negative value flag\r\n    $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n    // Remove +/- sign if present at first character\r\n    @if ($first-character == '+' or $first-character == '-') {\r\n        $value: str-slice($value, 2);\r\n    }\r\n\r\n    @for $i from 1 through str-length($value) {\r\n        // get the character at index i\r\n        $character: str-slice($value, $i, $i);\r\n\r\n        // if $character is not a number and not a decimal\r\n        @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n            // return the value found up to now in its units\r\n            @return to-length(if($minus, -$result, $result), str-slice($value, $i));\r\n        }\r\n\r\n        // track the current decimals place value once we've reached a decimal dot\r\n        @if $character == '.' {\r\n            $digits: 1;\r\n        } @else if $digits == 0 { // if a whole number digit\r\n            $result: $result * 10 + map-get($numbers, $character);\r\n        } @else { // if at a decimal digit\r\n            $digits: $digits * 10;\r\n            $result: $result + map-get($numbers, $character) / $digits;\r\n        }\r\n    }\r\n\r\n    // negate $result if $minus flag is set\r\n    @return if($minus, -$result, $result);\r\n}\r\n  \r\n  \r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n    // mapping identity prop of multiplication for each unit of measurement\r\n    $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n    @if not index(map-keys($units), $unit) {\r\n        $_: im-log('Invalid unit `#{$unit}`.');\r\n    }\r\n\r\n    // multiply $value by identity prop of measurement unit\r\n    @return $value * map-get($units, $unit);\r\n}\r\n  \r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n    // Save global configuration\r\n    $global-breakpoints: $breakpoints;\r\n    $global-media-expressions: $media-expressions;\r\n\r\n    // Update global configuration\r\n    $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n    $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n    @content;\r\n\r\n    // Restore global configuration\r\n    $breakpoints: $global-breakpoints !global;\r\n    $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n    // if media queries are supported and there are no conditions given\r\n    // or media queries are not supported and conditions are intercepted by static breakpoint\r\n    // then just pass on the content sent to mixin\r\n    @if ($im-media-support and length($conditions) == 0) or\r\n        (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n            @content;\r\n    // if media queries are supported and there are conditions\r\n    } @else if ($im-media-support and length($conditions) > 0) {\r\n        // get string as unquoted string\r\n        // parse the first condition in $conditions and use it as a media query\r\n        @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n            // Recursive call to parse the conditions after the condition that was just parsed\r\n            @include media(slice($conditions, 2)...) {\r\n                @content;\r\n            }\r\n        }\r\n    }\r\n}","@use '../../basePage';\r\n@use 'src/lib/styles/animations' as *;\r\n@use 'src/lib/styles/includeMedia' as *;\r\n@use 'src/lib/styles/clamp' as *;\r\n\r\n@include Scale(0, 1, ScaleUp);\r\n\r\n@include SlideHorizontal(-300%, AboutMeSlideRight);\r\n@include SlideHorizontal(300%, AboutMeSlideLeft);\r\n@include SlideVertical(-300%, AboutMeTextSlideDown);\r\n\r\n.AboutMe {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: transparent;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    position: relative;\r\n\r\n    font-family: 'Roboto';\r\n}\r\n\r\n.AboutMeContent {\r\n    width: 100%;\r\n    height: 85%;\r\n\r\n    box-sizing: border-box;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n\r\n    padding-left: 2%;\r\n    padding-right: 2%;\r\n\r\n    color: white;\r\n    text-align: left;\r\n    \r\n    overflow: hidden;\r\n\r\n    @include media('<desktop') {\r\n        height: 90%;\r\n    }\r\n}\r\n\r\n.AboutMeText {\r\n    width: 100%;\r\n    height: 20%;\r\n\r\n    box-sizing: border-box;\r\n\r\n    font-size: sass_clamp(360, 0.85, 2000, 1.5);\r\n    font-weight: 300;\r\n\r\n    word-wrap: break-word;\r\n\r\n    animation: AboutMeTextSlideDown 0.5s ease-out;\r\n\r\n    @include media('<desktop') {\r\n        height: auto;\r\n    }\r\n}\r\n\r\n.Icon {\r\n    width: 2em;\r\n    height: 2em;\r\n\r\n    @include media('<desktop') {\r\n        width: 1.5em;\r\n        height: 1.5em;\r\n    }\r\n}\r\n\r\n.AboutMeBottomHalf {\r\n    width: 100%;\r\n    height: 80%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    box-sizing: border-box;\r\n\r\n    // put contact info below technical skills\r\n    @include media('<desktop') {\r\n        height: auto;\r\n\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n    }\r\n}\r\n\r\n.TechnicalSkills {\r\n    width: 80%;\r\n    height: 100%;\r\n\r\n    overflow: hidden;\r\n\r\n    @include media('<desktop') {\r\n        width: 100%;\r\n        height: auto;\r\n\r\n        margin-left: 1%;\r\n        margin-bottom: 2%;\r\n    }\r\n\r\n    h2 {\r\n        font-size: sass_clamp(360, 0.8, 2000, 1.5);\r\n    }\r\n}\r\n\r\n.Languages, .FrameworksLibs, .Tools {\r\n    width: 100%;\r\n\r\n    animation-name: AboutMeSlideRight;\r\n    animation-timing-function: ease-out;\r\n}\r\n\r\n.Languages {\r\n    animation-duration: 0.25s;\r\n}\r\n\r\n.FrameworksLibs {\r\n    animation-duration: 0.5s;\r\n\r\n    @include media('<desktop') {\r\n        animation-duration: 0.35s;\r\n    }\r\n}\r\n\r\n.Tools {\r\n    animation-duration: 0.75s;\r\n\r\n    @include media('<desktop') {\r\n        animation-duration: 0.45s;\r\n    }\r\n}\r\n\r\n.TechSkillsHeader {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    cursor: pointer;\r\n}\r\n\r\n.TextIconList {\r\n    flex-basis: 100%;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    margin-bottom: 1%;\r\n\r\n    transform-origin: top left;\r\n    animation: ScaleUp 0.1s linear;\r\n}\r\n\r\n.TextIcon {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    white-space: nowrap;\r\n\r\n    margin-bottom: 1%;\r\n    margin-right: 3%;\r\n\r\n    font-size: sass_clamp(360, 0.8, 2000, 1.75);\r\n    font-weight: 300;\r\n\r\n    .TextName {\r\n        margin-left: 6%;\r\n    }\r\n\r\n    .Icon {\r\n        width: 2em;\r\n        height: 2em;\r\n    }\r\n}\r\n\r\n.ContactInfo {\r\n    width: 20%;\r\n    height: 100%;\r\n    \r\n    margin-left: 1%;\r\n\r\n    @include media('<desktop') {\r\n        width: 100%;\r\n        height: auto;\r\n        \r\n        margin-top: 2%;\r\n    }\r\n\r\n    h2 {\r\n        font-size: sass_clamp(360, 0.8, 2000, 1.5);\r\n\r\n        margin-top: 0;\r\n\r\n        animation-duration: 0.25s;\r\n        animation-timing-function: ease-out;\r\n        animation-name: AboutMeSlideLeft;\r\n\r\n        @include media('<desktop') {\r\n            animation-name: AboutMeSlideRight;\r\n            animation-duration: 0.55s;\r\n        }\r\n    }\r\n\r\n    .Resume, .ContactInfoEmail, .ContactInfoPhone, .LinkedIn {\r\n        font-size: sass_clamp(360, 0.8, 2000, 1.5);\r\n\r\n        margin-top: 0;\r\n\r\n        animation-timing-function: ease-out;\r\n        animation-name: AboutMeSlideLeft;\r\n\r\n        @include media('<desktop') {\r\n            animation-name: AboutMeSlideRight;\r\n        }\r\n    }\r\n\r\n    .Resume {\r\n        animation-duration: 0.5s;\r\n \r\n        @include media('<desktop') {\r\n            animation-duration: 0.65s;\r\n        }\r\n     }\r\n\r\n    .ContactInfoEmail {\r\n       animation-duration: 0.75s;\r\n\r\n        @include media('<desktop') {\r\n            animation-duration: 0.75s;\r\n        }\r\n    }\r\n\r\n    .ContactInfoPhone {\r\n        animation-duration: 1s;\r\n\r\n        @include media('<desktop') {\r\n            animation-duration: 0.85s;\r\n        }\r\n    }\r\n\r\n    .LinkedIn {\r\n        margin: 0;\r\n\r\n        animation-duration: 1.25s;\r\n        animation-timing-function: ease-out;\r\n        animation-name: AboutMeSlideLeft;\r\n\r\n        @include media('<desktop') {\r\n            animation-name: AboutMeSlideRight;\r\n            animation-duration: 0.95s;\r\n        }\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        font-weight: 500;\r\n    }\r\n\r\n}","@use 'src/containers/basePage';\r\n@use 'src/lib/styles/animations' as *;\r\n@use 'src/lib/styles/includeMedia' as *;\r\n@use 'src/lib/styles/clamp' as *;\r\n\r\n.Education {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: transparent;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    position: relative;\r\n}\r\n\r\n.EducationContent {\r\n    width: 100%;\r\n    height: 85%;\r\n\r\n    display: flex;\r\n\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 2%;\r\n    padding-right: 2%;\r\n\r\n    font-family: 'Roboto';\r\n    color: white;\r\n\r\n    @include media('<desktop') {\r\n        height: 90%;\r\n\r\n        flex-direction: column;\r\n    }\r\n}\r\n\r\n.Degree {\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    h2 {\r\n        font-size: sass_clamp(360, 0.8, 2000, 2);\r\n        font-weight: 400;\r\n    }\r\n\r\n    @include media('<desktop') {\r\n        width: 100%;\r\n        height: 50%;\r\n    }\r\n}\r\n\r\n.DegreeSpecs {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    li {\r\n        // calculate height based on how many children there are\r\n        height: calc(100% / 7);\r\n\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        font-size: sass_clamp(360, 1, 2000, 2);\r\n        font-weight: 400;\r\n        line-height: 2rem;\r\n\r\n        text-align: left;\r\n\r\n        list-style: none;\r\n\r\n        animation: SlideLeft;\r\n        animation-timing-function: ease-out;\r\n\r\n        a {\r\n            font-weight: 500;\r\n            text-decoration: none;\r\n        }\r\n\r\n        @include media('<desktop') {\r\n            height: auto;\r\n        }\r\n    }\r\n\r\n    @for $i from 1 through 7 {\r\n        // sets animation duration for each child incrementing by 0.1s\r\n        // durations range from 0.25s to 0.85s\r\n        li:nth-child(#{$i}) {\r\n            animation-duration: calc(calc(#{$i} * 0.10s) + 0.15s);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n.JmuImg {\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    animation: SlideRight 0.5s ease-out;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        object-fit: contain;\r\n    }\r\n\r\n    @include media('<desktop') {\r\n        width: 100%;\r\n        height: 50%;\r\n    }\r\n}","@use 'src/lib/styles/animations' as *;\r\n@use 'src/lib/styles/includeMedia' as *;\r\n@use 'src/lib/styles/clamp' as *;\r\n\r\n@include SlideVertical(-2000%, DownArrowSlideDown);\r\n\r\n.Header {\r\n    width: 100%;\r\n    height: 15%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    text-align: left;\r\n\r\n    @include media('<desktop') {\r\n        height: 10%;\r\n    }\r\n\r\n    h1 {\r\n        width: 100%;\r\n\r\n        font-size: sass_clamp(360, 2, 2000, 4.5);\r\n        font-family: 'Roboto';\r\n        font-weight: 200;\r\n        text-transform: uppercase;\r\n\r\n        color: white;\r\n\r\n        margin: 0;\r\n\r\n        padding-top: 2%;\r\n        padding-left: 2%;\r\n    }\r\n}\r\n\r\n.DownArrow {\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n\r\n    padding-top: 2%;\r\n\r\n    position: absolute;\r\n    bottom: 1%;\r\n    right: 1%;\r\n    z-index: 2;\r\n\r\n    animation: DownArrowSlideDown 1s ease-in;\r\n\r\n    svg {\r\n        cursor: pointer;\r\n        color: white;\r\n\r\n        &:hover {\r\n            animation: ArrowBounce 1s ease-in-out infinite;\r\n        }\r\n\r\n        @include media('<desktop') {\r\n            transform: scale(0.75);\r\n        }\r\n\r\n        @include media('<phone') {\r\n            transform: scale(0.5);\r\n        }\r\n    }\r\n}","@use 'src/containers/basePage';\r\n@use 'src/lib/styles/animations' as *;\r\n@use 'src/lib/styles/includeMedia' as *;\r\n@use 'src/lib/styles/clamp' as *;\r\n\r\n@include SlideVertical(1000%, JobDetailsSlideUp);\r\n\r\n.work-history {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: transparent;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    position: relative;\r\n}\r\n\r\n.work-history-content {\r\n    width: 100%;\r\n    height: 85%;\r\n\r\n    display: flex;\r\n\r\n    box-sizing: border-box;\r\n\r\n    position: relative;\r\n\r\n    padding-left: 2%;\r\n    padding-right: 2%;\r\n\r\n    margin-bottom: 1%;\r\n\r\n    overflow:hidden;\r\n\r\n    font-family: 'Roboto';\r\n    color: white;\r\n\r\n    @include media('<desktop') {\r\n        height: 90%;\r\n\r\n        flex-direction: column;\r\n    }\r\n\r\n    .timeline-hint {\r\n        position: absolute;\r\n        top: 1%;\r\n        left: 5%;\r\n\r\n        font-weight: 400;\r\n        opacity: 0.9;\r\n\r\n        animation: SlideRight 0.3s ease-out;\r\n\r\n        @include media('<tablet') {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .timeline {\r\n        width: 40%;\r\n        height: 100%;\r\n    \r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-evenly;\r\n    \r\n        box-sizing: border-box;\r\n    \r\n        position: relative;\r\n\r\n        margin-left: 2%;\r\n\r\n        @include media('<tablet') {\r\n            display: none;\r\n        }\r\n    \r\n        &::before {\r\n            content: '';\r\n    \r\n            width: 3px;\r\n            height: 100%;\r\n    \r\n            background-color: white;\r\n    \r\n            position: absolute;\r\n            left: -14px;\r\n\r\n            animation: ScaleUp 0.8s ease-out;\r\n        }\r\n    }\r\n    \r\n    .timeline-item {\r\n        // width: 100%;\r\n    \r\n        position: relative;\r\n    \r\n        display: flex;\r\n        align-items: center;\r\n        box-sizing: border-box;\r\n    \r\n        padding-bottom: 2%;\r\n\r\n        transform-origin: top left;\r\n        transform: scale(1);\r\n        transition: transform 100ms ease-out;\r\n\r\n        animation: SlideRight;\r\n        animation-timing-function: ease-out;\r\n    \r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            transform-origin: top left;\r\n            transform: scale(1.2);\r\n            transition: transform 100ms ease-out;\r\n        }\r\n    \r\n        &::before {\r\n            content: '';\r\n            width: 20px;\r\n            height: 20px;\r\n    \r\n            border-radius: 50%;\r\n    \r\n            background-color: white;\r\n    \r\n            position: absolute;\r\n            left: -22px;\r\n        }\r\n    \r\n        .item-container {\r\n            width: 80%;\r\n            height: 100%;\r\n    \r\n            display: flex;\r\n            flex-direction: column;\r\n    \r\n            box-sizing: border-box;\r\n    \r\n            padding-left: 1%;\r\n    \r\n            .item-title {\r\n                width: 100%;\r\n                // height: 65%;\r\n    \r\n                font-size: sass_clamp(360, 1.25, 2000, 2);\r\n                font-weight: 500;\r\n                text-align: left;\r\n    \r\n                padding-bottom: 0.5%;\r\n            }\r\n    \r\n            .item-subtitle {\r\n                width: 100%;\r\n                // height: 20%;\r\n    \r\n                font-size: sass_clamp(360, 1.25, 2000, 1.5);\r\n                font-weight: 400;\r\n                text-align: left;\r\n    \r\n                padding-bottom: 0.5%;\r\n            }\r\n    \r\n            .item-date {\r\n                width: 100%;\r\n                // height: 15%;\r\n        \r\n                font-size: sass_clamp(360, 0.75, 2000, 1);\r\n                font-weight: 300;\r\n                text-align: left;\r\n    \r\n                padding-bottom: 0.5%;\r\n            }\r\n        }\r\n    }\r\n\r\n    @for $i from 1 through 3 {\r\n        // sets animation duration for each timeline-item incrementing by 0.7s\r\n        .timeline-item:nth-child(#{$i}) {\r\n            animation-duration: calc(calc(#{$i} * 0.7s));\r\n        }\r\n    }\r\n}\r\n\r\n.slideshow-history {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    @include media('>=tablet') {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.work-history-selection {\r\n    width: 60%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    box-sizing: border-box;\r\n}\r\n\r\n.job-image {\r\n    width: 100%;\r\n    max-height: 30%;\r\n\r\n    box-sizing: border-box;\r\n\r\n    margin-bottom: 1%;\r\n\r\n    overflow: hidden;\r\n\r\n    animation: SlideLeft 0.5s ease-out;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        object-fit: contain;\r\n    }\r\n}\r\n\r\n.job-details {\r\n    width: 100%;\r\n    max-height: 70%;\r\n\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    text-align: left;\r\n\r\n    // the number of children is dynamic, so we set the timing for up to 10\r\n    @for $i from 1 through 10 {\r\n        .job-details-list-item:nth-child(#{$i}) {\r\n            animation-duration: calc(calc(#{$i} * 0.3s) + 0.5s);\r\n        }\r\n    }\r\n}\r\n\r\n.job-details-list-item {\r\n    padding-bottom: 1rem;\r\n\r\n    animation-name: JobDetailsSlideUp;\r\n    animation-timing-function: ease-in;\r\n}",".App {\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.App-logo {\r\n  height: 40vmin;\r\n  pointer-events: none;\r\n}\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n  .App-logo {\r\n    animation: App-logo-spin infinite 20s linear;\r\n  }\r\n}\r\n\r\n.App-header {\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n}\r\n\r\n.App-link {\r\n  color: #61dafb;\r\n}\r\n\r\n@keyframes App-logo-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","body {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n\r\n.root {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n"],"names":[],"sourceRoot":""}